pipeline {
  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
    }
  }
  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'
        //git branch: 'main', url: 'https://github.com/iam-veeramalla/Jenkins-Zero-To-Hero.git'
      }
    }
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        // build the project and create a JAR file
        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
      }
    }
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "reddy993/ci-cd:${BUILD_NUMBER}"
        // DOCKERFILE_LOCATION = "java-maven-sonar-argocd-helm-k8s/spring-boot-app/Dockerfile"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
            sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                dockerImage.push()
            }
        }
      }
    }
    stage('Update Deployment File') {
        environment {
            GIT_REPO_NAME = "CI-CD"
            GIT_USER_NAME = "reddy9937"
        }
        pipeline {
    agent any

    environment {
        GIT_USER_NAME = 'reddy9937'
        GIT_REPO_NAME = 'CI-CD'
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    // Checkout the desired branch
                    sh 'git checkout main'
                }
            }
        }

      stage('Update Deployment File') {
    environment {
        GIT_REPO_NAME = 'CI-CD'
        GIT_USER_NAME = 'reddy9937'
    }
    steps {
        script {
            sh '''
                git checkout main
                sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" path/to/deployment.yml
                git add path/to/deployment.yml
                git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
            '''
        }
   }
}
